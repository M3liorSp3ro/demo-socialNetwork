{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["module","exports","Post","props","className","s","item","src","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","name","validate","required","MyPosts","console","log","postsElements","posts","map","p","id","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","descriptionBlock","photos","large","Preloader","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","React","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.8c057cc7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__73CFF\",\"posts\":\"MyPosts_posts__2GV5j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2TLp7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"ProfileInfo_img__LYPbf\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__25GhF\"};","import React from 'react'\r\nimport s from './Post.module.css'\r\n\r\nconst Post = props => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://w-dog.ru/wallpapers/1/92/429412775478086/nejtiri-na-39-vi-avatar.jpg\" />\r\n            {props.message}\r\n            <div>\r\n                <span>Like </span>{props.likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators'\r\nimport { Textarea } from '../../common/FormsControls/FormsControls'\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\n\r\nconst MyPosts = props => {\r\n    console.log('RENDER')\r\n\r\n    let postsElements = props.posts.map(p => <Post message={p.message} key={p.id} likesCount={p.likesCount} />)\r\n\r\n    const onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My post</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddNewPostForm = props => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    placeholder='Post message'\r\n                    name='newPostText'\r\n                    validate={[required, maxLength10]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({ form: 'profileAddPostForm' })(AddNewPostForm)\r\n\r\nexport default MyPosts","import { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux'\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","import React, { useEffect, useState } from 'react'\r\n\r\nconst ProfileStatusWithHooks = props => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || '-----'}</span>\r\n                </div>\r\n            }\r\n\r\n            {\r\n                editMode &&\r\n                <div>\r\n                    <input\r\n                        autoFocus={true}\r\n                        onBlur={deactivateEditMode}\r\n                        onChange={onStatusChange}\r\n                        value={status}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from 'react'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport s from './ProfileInfo.module.css'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large} />\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","import React from 'react'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\n\r\nconst Profile = props => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport Profile from './Profile'\r\nimport { connect } from 'react-redux'\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { compose } from 'redux'\r\n\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n            if(!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile\r\n                {...this.props}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}