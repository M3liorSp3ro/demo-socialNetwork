{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/AddMessageForm/AddMessageForm.js","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/Dialogs.js","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","maxLength50","maxLengthCreator","reduxForm","form","props","onSubmit","handleSubmit","Field","component","Textarea","validate","required","name","placeholder","DialogItem","path","id","className","s","dialog","active","to","Message","message","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","isAuth","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,oHCI5KC,EAAcC,YAAiB,IAoBtBC,cAAU,CAAEC,KAAM,wBAAlBD,EAlBQ,SAAAE,GACnB,OACI,uBAAMC,SAAUD,EAAME,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CACIC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBY,KAAK,iBACLC,YAAY,yBAGpB,8BACI,kD,0BCLDC,EAVI,SAAAV,GACf,IAAIW,EAAI,mBAAeX,EAAMY,IAE7B,OACI,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACI,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAoBX,EAAMQ,UCAvBU,EANC,SAAAlB,GACZ,OACI,qBAAKa,UAAWC,IAAEK,QAAlB,SAA4BnB,EAAMmB,WC+B3BC,EA7BC,SAAApB,GAEZ,IAAMqB,EAAQrB,EAAMsB,YAEhBC,EAAkBF,EAAMG,QACvBC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYlB,KAAMkB,EAAElB,KAAiBI,GAAIc,EAAEd,IAAZc,EAAEd,OAE3Ce,EAAmBN,EAAMO,SACxBH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAASV,QAASU,EAAEV,SAAcU,EAAEjB,OAMlD,OAAKZ,EAAM8B,OAGP,sBAAKjB,UAAWC,IAAEU,QAAlB,UACI,qBAAKX,UAAWC,IAAEiB,aAAlB,SACKR,IAEL,qBAAKV,UAAWC,IAAEc,SAAlB,SACI,8BAAMD,MAEV,cAAC,EAAD,CAAgB1B,SAdF,SAAA+B,GAClBhC,EAAMiC,YAAYD,EAAOE,sBAGH,cAAC,IAAD,CAAUjB,GAAG,Y,+CCjBrCkB,EAA6B,SAAAd,GAAK,MAAK,CACzCS,OAAQT,EAAMe,KAAKN,S,OCeRO,sBACXC,aAfoB,SAAAjB,GACpB,MAAO,CACHC,YAAaD,EAAMC,gBAIA,SAAAiB,GACvB,MAAO,CACHN,YAAa,SAACC,GACVK,EAASC,YAAmBN,UDPR,SAAAO,GAAc,IACpCC,EADmC,uKAGjC,OAAIC,KAAK3C,MAAM8B,OAER,cAACW,EAAD,eAAeE,KAAK3C,QAFG,cAAC,IAAD,CAAUiB,GAAG,eAHV,GACT2B,IAAMH,WAUtC,OAFqCH,YAAQH,EAARG,CAAoCI,KCG9DL,CAGbjB","file":"static/js/4.ef42cb60.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3Vzjy\",\"dialogsItems\":\"Dialogs_dialogsItems__1sPFm\",\"active\":\"Dialogs_active__3RxXp\",\"messages\":\"Dialogs_messages__qoSn2\",\"message\":\"Dialogs_message__2kKCB\"};","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators'\r\nimport { Textarea } from '../../common/FormsControls/FormsControls'\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = props => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    validate={[required, maxLength50]}\r\n                    name='newMessageBody'\r\n                    placeholder='Enter your message'\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm)","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst DialogItem = props => {\r\n    let path = `/dialogs/${props.id}`\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from 'react'\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst Message = props => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport s from './Dialogs.module.css'\r\nimport Message from './Message/Message'\r\n\r\nconst Dialogs = props => {\r\n\r\n    const state = props.dialogsPage\r\n\r\n    let dialogsElements = state.dialogs\r\n        .map(d => <DialogItem name={d.name} key={d.id} id={d.id} />)\r\n\r\n    let messagesElements = state.messages\r\n        .map(m => <Message message={m.message} key={m.id} />)\r\n\r\n    const addNewMessage = values => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to='/login' />\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst mapStateToPropsForRedirect = state => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = Component => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    const ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectAuthRedirectComponent    \r\n}","import { sendMessageCreator } from '../../redux/dialogs-reducer'\r\nimport Dialogs from './Dialogs'\r\nimport { connect } from 'react-redux'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport { compose } from 'redux'\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}